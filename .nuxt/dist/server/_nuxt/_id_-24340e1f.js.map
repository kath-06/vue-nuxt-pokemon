{"version":3,"file":"_id_-24340e1f.js","sources":["../../../../node_modules/nuxt/dist/head/runtime/components.js","../../../../components/elements/VnBadge.vue","../../../../pages/pokemons/[id].vue"],"sourcesContent":["import { defineComponent } from \"vue\";\nimport { useHead } from \"@unhead/vue\";\nconst removeUndefinedProps = (props) => Object.fromEntries(Object.entries(props).filter(([, value]) => value !== void 0));\nconst setupForUseMeta = (metaFactory, renderChild) => (props, ctx) => {\n  useHead(() => metaFactory({ ...removeUndefinedProps(props), ...ctx.attrs }, ctx));\n  return () => renderChild ? ctx.slots.default?.() : null;\n};\nconst globalProps = {\n  accesskey: String,\n  autocapitalize: String,\n  autofocus: {\n    type: Boolean,\n    default: void 0\n  },\n  class: [String, Object, Array],\n  contenteditable: {\n    type: Boolean,\n    default: void 0\n  },\n  contextmenu: String,\n  dir: String,\n  draggable: {\n    type: Boolean,\n    default: void 0\n  },\n  enterkeyhint: String,\n  exportparts: String,\n  hidden: {\n    type: Boolean,\n    default: void 0\n  },\n  id: String,\n  inputmode: String,\n  is: String,\n  itemid: String,\n  itemprop: String,\n  itemref: String,\n  itemscope: String,\n  itemtype: String,\n  lang: String,\n  nonce: String,\n  part: String,\n  slot: String,\n  spellcheck: {\n    type: Boolean,\n    default: void 0\n  },\n  style: String,\n  tabindex: String,\n  title: String,\n  translate: String\n};\nexport const NoScript = defineComponent({\n  name: \"NoScript\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    title: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props, { slots }) => {\n    const noscript = { ...props };\n    const textContent = (slots.default?.() || []).filter(({ children }) => children).map(({ children }) => children).join(\"\");\n    if (textContent) {\n      noscript.children = textContent;\n    }\n    return {\n      noscript: [noscript]\n    };\n  })\n});\nexport const Link = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Link\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    as: String,\n    crossorigin: String,\n    disabled: Boolean,\n    fetchpriority: String,\n    href: String,\n    hreflang: String,\n    imagesizes: String,\n    imagesrcset: String,\n    integrity: String,\n    media: String,\n    prefetch: {\n      type: Boolean,\n      default: void 0\n    },\n    referrerpolicy: String,\n    rel: String,\n    sizes: String,\n    title: String,\n    type: String,\n    /** @deprecated **/\n    methods: String,\n    /** @deprecated **/\n    target: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((link) => ({\n    link: [link]\n  }))\n});\nexport const Base = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Base\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    href: String,\n    target: String\n  },\n  setup: setupForUseMeta((base) => ({\n    base\n  }))\n});\nexport const Title = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Title\",\n  inheritAttrs: false,\n  setup: setupForUseMeta((_, { slots }) => {\n    if (import.meta.dev) {\n      const defaultSlot = slots.default?.();\n      if (defaultSlot && (defaultSlot.length > 1 || typeof defaultSlot[0].children !== \"string\")) {\n        console.error(\"<Title> can take only one string in its default slot.\");\n      }\n      return {\n        title: defaultSlot?.[0]?.children || null\n      };\n    }\n    return {\n      title: slots.default?.()?.[0]?.children || null\n    };\n  })\n});\nexport const Meta = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Meta\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    charset: String,\n    content: String,\n    httpEquiv: String,\n    name: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props) => {\n    const meta = { ...props };\n    if (meta.httpEquiv) {\n      meta[\"http-equiv\"] = meta.httpEquiv;\n      delete meta.httpEquiv;\n    }\n    return {\n      meta: [meta]\n    };\n  })\n});\nexport const Style = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Style\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    type: String,\n    media: String,\n    nonce: String,\n    title: String,\n    /** @deprecated **/\n    scoped: {\n      type: Boolean,\n      default: void 0\n    },\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props, { slots }) => {\n    const style = { ...props };\n    const textContent = slots.default?.()?.[0]?.children;\n    if (textContent) {\n      if (import.meta.dev && typeof textContent !== \"string\") {\n        console.error(\"<Style> can only take a string in its default slot.\");\n      }\n      style.children = textContent;\n    }\n    return {\n      style: [style]\n    };\n  })\n});\nexport const Head = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Head\",\n  inheritAttrs: false,\n  setup: (_props, ctx) => () => ctx.slots.default?.()\n});\nexport const Html = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Html\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    manifest: String,\n    version: String,\n    xmlns: String,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((htmlAttrs) => ({ htmlAttrs }), true)\n});\nexport const Body = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Body\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((bodyAttrs) => ({ bodyAttrs }), true)\n});\n","<template>\r\n  <span :class=\"badgeClass\">\r\n    {{ text.toUpperCase() }}\r\n  </span>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { pokemonTypes  } from '../../composables/types'\r\n\r\nconst props = defineProps({\r\n  text: {\r\n    type: String,\r\n    default: 'normal'\r\n  }\r\n})\r\n\r\nlet badgeClass = ref<string>('')\r\n\r\nconst setType = () => {\r\n  if(props.text) {\r\n    pokemonTypes.forEach((item: any) => {\r\n      if (item.name === props.text) {\r\n        badgeClass.value = item.class\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  setType()\r\n})\r\n</script>\r\n","<template>\r\n  <div class=\"p-4\">\r\n    <Head>\r\n      <Title>Vue-Nuxt Pokemon | {{ pokemonData.name }}</Title>\r\n    </Head>\r\n    <VnPageHeader\r\n      text=\"Pokemon Information\"\r\n      :show-button=\"true\"\r\n      @back=\"handleBack\"\r\n    />\r\n    <VnLoading :loading=\"loading\" />\r\n    <div v-show=\"!loading\" class=\"group-card-col-3\">\r\n      <div class=\"card-2 animate-fade-left animate-ease-in-out\">\r\n        <div class=\"container-5\">\r\n          <img class=\"w-40 h-40\" src=\"../../assets/pok-mon-go-logo-png-30.png\">\r\n        </div>\r\n      </div>\r\n      <div class=\"card-1 animate-fade-right animate-delay-[1000ms] animate-ease-in-out\">\r\n        <div class=\"container-1\">\r\n          <img class=\"w-80 h-80\" :src=\"`${pokemonImg}${id}.png`\">\r\n          <div class=\"text-title-primary\">\r\n            {{ pokemonData.name }}\r\n          </div>\r\n          <p class=\"pr-1 m-4\">\r\n            <span\r\n              v-for=\"(item, index) in pokemonTypes\"\r\n              :key=\"index\"\r\n            >\r\n              <VnBadge :text=\"item.name\"></VnBadge>\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div class=\"container-2 text-subtitle-default\">\r\n          <i>\r\n            {{ pokemonSpecies.text }}\r\n          </i>\r\n          <i v-if=\"pokemonSpecies.formDescriptions\">\r\n            {{ pokemonSpecies.formDescriptions }}\r\n          </i>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-1 animate-fade-right animate-delay-[2000ms] animate-ease-in-out\">\r\n        <div class=\"container-3 text-head-title-default\">\r\n          <p class=\"px-4\">Details</p>\r\n          <!-- <img class=\"w-20 h-20\" :src=\"`${pokemonShinyImg}${id}.png`\"> -->\r\n        </div>\r\n        <div class=\"container-4 text-subtitle-default\">\r\n          <p>\r\n            <b>Evolve From Species:</b> {{ pokemonSpecies.evolvesFromSpecies }}\r\n          </p>\r\n          <p>\r\n            <b>Habitat:</b> {{ pokemonSpecies.habitat }}\r\n          </p>\r\n          <p>\r\n            <b>Shape:</b> {{ pokemonSpecies.shape }}\r\n          </p>\r\n          <p>\r\n            <b>Abilities:</b>\r\n            <span\r\n              class=\"pr-1\"\r\n              v-for=\"(item, index) in pokemonData.abilities\"\r\n              :key=\"index\"\r\n            >\r\n              {{ index > 0 ? ',' : '' }} {{ item.ability.name }}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <b>Color:</b> {{ pokemonSpecies.color }}\r\n          </p>\r\n          <p>\r\n            <b>Weight:</b> {{ pokemonData.weight }}\r\n          </p>\r\n          <p>\r\n            <b>Height:</b> {{ pokemonData.height }}\r\n          </p>\r\n          <p>\r\n            <b>Egg Groups:</b>\r\n            <span\r\n              class=\"pr-1\"\r\n              v-for=\"(group, index) in pokemonSpecies.eggGroups\"\r\n              :key=\"index\"\r\n            >\r\n              {{ index > 0 ? ',' : '' }} {{ group.name }}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <b>Generation:</b> {{ pokemonSpecies.generation  }}\r\n          </p>\r\n          <p>\r\n            <b>Growth Rate:</b> {{ pokemonSpecies.growthRate  }}\r\n          </p>\r\n          <p>\r\n            <b>Base Experience:</b> {{ pokemonData.base_experience  }}\r\n          </p>\r\n          <p>\r\n            <b>Base Happiness:</b> {{ pokemonSpecies.baseHappiness }}\r\n          </p>\r\n          <p>\r\n            <b>Capture Rate:</b> {{ pokemonSpecies.captureRate }}\r\n          </p>\r\n          <p>\r\n            <b>Gender Rate:</b> {{ pokemonSpecies.genderRate }}\r\n          </p>\r\n          <p>\r\n            <b>Hatch Counter:</b> {{ pokemonSpecies.hatchCounter }}\r\n          </p>\r\n          <p>\r\n            <b>Is Baby?</b> {{ pokemonSpecies.isBaby ? 'Yes' : 'No' }}\r\n          </p>\r\n          <p>\r\n            <b>Is Legendary?</b> {{ pokemonSpecies.isLegendary ? 'Yes' : 'No' }}\r\n          </p>\r\n          <p>\r\n            <b>Is Mythical?</b> {{ pokemonSpecies.isMythical ? 'Yes' : 'No' }}\r\n          </p>\r\n          <p>\r\n            <b>Has Gender Differences:</b> {{ pokemonSpecies.hasGenderDifferences ? 'Yes' : 'No' }}\r\n          </p>\r\n          <p>\r\n            <b>Form Switchable:</b> {{ pokemonSpecies.formSwitchable ? 'Yes' : 'No' }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"!loading\" class=\"group-card-col-2\">\r\n      <div class=\"card-3 animate-flip-down animate-delay-[1000ms] animate-ease-in-out\">\r\n        <div class=\"container-3 text-head-title-default\">\r\n          <p class=\"px-4\">Type</p>\r\n        </div>\r\n        <div class=\"container-4 text-subtitle-default\">\r\n          <p\r\n            class=\"pr-1 m-4\"\r\n            v-for=\"(item, index) in pokemonTypes\"\r\n            :key=\"index\"\r\n          >\r\n            <b class=\"text-xl pb-2\">{{ item.name }} Type</b>\r\n            <p>\r\n              <b>Double Damage From:</b>\r\n              <span\r\n                class=\"pr-1\"\r\n                v-for=\"(value, index) in item.damage_relations.double_damage_from\"\r\n                :key=\"index\"\r\n              >\r\n                {{ index > 0 ? ',' : '' }} {{ value.name }}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <b>Double Damage To:</b>\r\n              <span\r\n                class=\"pr-1\"\r\n                v-for=\"(value, index) in item.damage_relations.double_damage_to\"\r\n                :key=\"index\"\r\n              >\r\n                {{ index > 0 ? ',' : '' }} {{ value.name }}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <b>Half Damage From:</b>\r\n              <span\r\n                class=\"pr-1\"\r\n                v-for=\"(value, index) in item.damage_relations.half_damage_from\"\r\n                :key=\"index\"\r\n              >\r\n                {{ index > 0 ? ',' : '' }} {{ value.name }}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <b>Half Damage To:</b>\r\n              <span\r\n                class=\"pr-1\"\r\n                v-for=\"(value, index) in item.damage_relations.half_damage_to\"\r\n                :key=\"index\"\r\n              >\r\n                {{ index > 0 ? ',' : '' }} {{ value.name }}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <b>No Damage From:</b>\r\n              <span v-if=\"item.damage_relations.no_damage_from.length > 0\">\r\n                <span\r\n                  class=\"pr-1\"\r\n                  v-for=\"(value, index) in item.damage_relations.no_damage_from\"\r\n                  :key=\"index\"\r\n                >\r\n                  {{ index > 0 ? ',' : '' }} {{ value.name }}\r\n                </span>\r\n              </span>\r\n              <span v-else class=\"pl-2\">-</span>\r\n            </p>\r\n            <p>\r\n              <b>No Damage To:</b>\r\n              <span v-if=\"item.damage_relations.no_damage_to.length > 0\">\r\n                <span\r\n                  class=\"pr-1\"\r\n                  v-for=\"(value, index) in item.damage_relations.no_damage_to\"\r\n                  :key=\"index\"\r\n                >\r\n                  {{ index > 0 ? ',' : '' }} {{ value.name }}\r\n                </span>\r\n              </span>\r\n              <span v-else class=\"pl-2\">-</span>\r\n            </p>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-3 animate-flip-down animate-delay-[2000ms] animate-ease-in-out\">\r\n        <div class=\"container-3 text-head-title-default\">\r\n          <p class=\"px-4\">Moves</p>\r\n        </div>\r\n        <div class=\"container-4 text-subtitle-default\">\r\n          <p\r\n            class=\"pr-1 m-4\"\r\n            v-for=\"(item, index) in pokemonTypes\"\r\n            :key=\"index\"\r\n          >\r\n            <b class=\"text-xl pb-2\">{{ item.name }} Type Moves</b>\r\n            <div class=\"grid grid-cols-2\">\r\n              <p\r\n                v-for=\"(value, index) in item.moves\"\r\n                :key=\"index\"\r\n              >\r\n                {{ value.name }}\r\n              </p>\r\n            </div>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport VnLoading from '~/components/elements/VnLoading.vue';\r\nimport VnPageHeader from '~/components/elements/VnPageHeader.vue'\r\nimport VnBadge from '~/components/elements/VnBadge.vue'\r\n\r\nconst { id } = useRoute().params\r\nconst router = useRouter()\r\nlet loading = ref<boolean>(true)\r\nlet pokemonData = reactive<any>({})\r\nlet pokemonSpecies = reactive<any>({\r\n  text: '',\r\n  color: '',\r\n  evolvesFromSpecies: '',\r\n  eggGroups: [],\r\n  baseHappiness: '',\r\n  captureRate: '',\r\n  formDescriptions: '',\r\n  formSwitchable: false,\r\n  genderRate: '',\r\n  generation: '',\r\n  growthRate: '',\r\n  habitat: '',\r\n  hasGenderDifferences: false,\r\n  hatchCounter: '',\r\n  isBaby: false,\r\n  isLegendary: false,\r\n  isMythical: false,\r\n  shape: ''\r\n})\r\nlet pokemonTypes = reactive<any>([])\r\nlet pokemonShinyImg = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/shiny/'\r\nlet pokemonImg = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/'\r\n\r\nonBeforeMount(() => {\r\n  getPokemonSpecies()\r\n})\r\n\r\nonMounted(() => {\r\n  loading.value = true\r\n  setTimeout(() => {\r\n    getPokemonData()\r\n  }, 2000)\r\n})\r\n\r\nconst getPokemonData = async () => {\r\n\r\n  const { data, refresh } : any = await useFetch(`/api/pokemon?id=${id}`, { query: { type: 'pokemon' } })\r\n  if (data.value === null) {\r\n    await refresh()\r\n  }\r\n  Object.assign(pokemonData, data.value)\r\n  Object.assign(pokemonTypes, [])\r\n  pokemonData.types.map((item : any) => {\r\n    getPokemonTypes(item.type.url)\r\n  })\r\n  loading.value = false\r\n}\r\n\r\nconst getPokemonSpecies = async () => {\r\n  const species = {\r\n    text: '',\r\n    color: '-',\r\n    evolvesFromSpecies: '-',\r\n    eggGroups: [],\r\n    baseHappiness: '-',\r\n    captureRate: '-',\r\n    formDescriptions: '',\r\n    formSwitchable: false,\r\n    genderRate: '-',\r\n    generation: '-',\r\n    growthRate: '-',\r\n    habitat: '-',\r\n    hasGenderDifferences: false,\r\n    hatchCounter: '-',\r\n    isBaby: false,\r\n    isLegendary: false,\r\n    isMythical: false,\r\n    shape: '-'\r\n  }\r\n  const { data, refresh } : any = await useFetch(`/api/pokemon?id=${id}`, { query: { type: 'species' } })\r\n  if (data.value === null) {\r\n    await refresh()\r\n  }\r\n  if (data.value) {\r\n    species.text = data.value.flavor_text_entries ? (`${data.value.flavor_text_entries[1].flavor_text} ${data.value.flavor_text_entries[6].flavor_text}`).replace(/[\\n\\f]/g, ' ') : ''\r\n    species.formDescriptions = data.value.form_descriptions.length > 0 ? data.value.form_descriptions[0].description : ''\r\n    species.color = data.value.color ? data.value.color.name : ''\r\n    species.evolvesFromSpecies = data.value.evolves_from_species ? data.value.evolves_from_species.name : '-'\r\n    species.eggGroups = data.value.egg_groups.length > 0 ? data.value.egg_groups : []\r\n    species.baseHappiness = data.value.base_happiness || '-'\r\n    species.captureRate = data.value.capture_rate || '-'\r\n    species.formSwitchable = data.value.form_switchable || false\r\n    species.genderRate = data.value.gender_rate || '-'\r\n    species.generation = data.value.generation ? data.value.generation.name : '-',\r\n    species.growthRate = data.value.growth_rate ? data.value.growth_rate.name : '-'\r\n    species.habitat = data.value.habitat ? data.value.habitat.name : '-'\r\n    species.hasGenderDifferences = data.value.has_gender_differences || false\r\n    species.hatchCounter= data.value.hatch_counter || '-'\r\n    species.isBaby= data.value.is_baby || false\r\n    species.isLegendary = data.value.is_legendary || false\r\n    species.isMythical = data.value.is_mythical || false\r\n    species.shape = data.value.shape ? data.value.shape.name : '-'\r\n  }\r\n  Object.assign(pokemonSpecies, species)\r\n}\r\n\r\nconst getPokemonTypes = async (url : any) => {\r\n  const lastSlashindex = url.lastIndexOf('/')\r\n  const secondLastSlashIndex = url.lastIndexOf('/', lastSlashindex - 1)\r\n  const urlId = url.slice(secondLastSlashIndex + 1, lastSlashindex)\r\n\r\n  const { data, refresh } : any = await useFetch(`/api/pokemon?id=${urlId}`, { query: { type: 'types' } })\r\n  if (data.value === null) {\r\n    await refresh()\r\n  }\r\n  pokemonTypes.push(data.value)\r\n}\r\n\r\nconst handleBack = () => {\r\n  router.back()\r\n}\r\n</script>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAEA,MAAM,uBAAuB,CAAC,UAAU,OAAO,YAAY,OAAO,QAAQ,KAAK,EAAE,OAAO,CAAC,CAAA,EAAG,KAAK,MAAM,UAAU,MAAM,CAAC;AACxH,MAAM,kBAAkB,CAAC,aAAa,gBAAgB,CAAC,OAAO,QAAQ;AACpE,UAAQ,MAAM,YAAY,EAAE,GAAG,qBAAqB,KAAK,GAAG,GAAG,IAAI,SAAS,GAAG,CAAC;AAChF,SAAO,MAAA;;AAAM,0BAAc,eAAI,OAAM,YAAV,8BAAwB;AAAA;AACrD;AAmHO,MAAM,QAAQ,gCAAgB;AAAA;AAAA,EAEnC,MAAM;AAAA,EACN,cAAc;AAAA,EACd,OAAO,gBAAgB,CAAC,GAAG,EAAE,MAAK,MAAO;;AAUvC,WAAO;AAAA,MACL,SAAO,uBAAM,YAAN,sDAAoB,OAApB,mBAAwB,aAAY;AAAA,IACjD;AAAA,EACA,CAAG;AACH,CAAC;AAyDM,MAAM,uCAAuB;AAAA;AAAA,EAElC,MAAM;AAAA,EACN,cAAc;AAAA,EACd,OAAO,CAAC,QAAQ,QAAQ,MAAA;;AAAM,2BAAI,OAAM,YAAV;AAAA;AAChC,CAAC;;;;;;;;;;;ACzLG,QAAA,aAAa,IAAY,EAAE;;;;;;;;;;;;;;;;AC4N/B,UAAM,EAAE,GAAA,IAAO,SAAA,EAAW;AAC1B,UAAM,SAAS;AACX,QAAA,UAAU,IAAa,IAAI;AAC3B,QAAA,cAAc,SAAc,CAAA,CAAE;AAClC,QAAI,iBAAiB,SAAc;AAAA,MACjC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,oBAAoB;AAAA,MACpB,WAAW,CAAC;AAAA,MACZ,eAAe;AAAA,MACf,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,sBAAsB;AAAA,MACtB,cAAc;AAAA,MACd,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,OAAO;AAAA,IAAA,CACR;AACG,QAAA,eAAe,SAAc,CAAA,CAAE;AAEnC,QAAI,aAAa;AAuFjB,UAAM,aAAa,MAAM;AACvB,aAAO,KAAK;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}